{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/*******************************************************************************************\n * check the image function to display in the correct way. Working on tonight./\n * ********************************************************************************************/\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nconst { artists, songs } = window;\n\n// For debugging, display all of our data in the console.\nconsole.log({ artists, songs }, \"App Data\");\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const menu = document.getElementById(\"menu\");\n  const artistNameElement = document.getElementById(\"artist-name\");\n  const artistLinksElement = document.getElementById(\"artist-links\");\n  const songTableBody = document.getElementById(\"song-table-body\");\n  const songCardContainer = document.getElementById(\"song-card-container\");\n  const newsletterForm = document.getElementById(\"newsletterForm\");\n  const subscribeMessageContainer = document.getElementById(\"subscribe-message-container\");\n  const artistRequestForm = document.getElementById(\"artistRequestForm\");\n  const addMoreLinksButton = document.getElementById(\"add-more-links\");\n\n  const submitArtistRequestButton = document.getElementById(\"submit-artist-request\");\n\n  // Function to create artist buttons dynamically\n  function createArtistButtons() {\n    artists.forEach((artist) => {\n      const button = document.createElement(\"button\");\n      button.textContent = artist.name;\n      button.setAttribute(\"aria-label\", `View details for ${artist.name}`);\n      button.addEventListener(\"click\", () => showArtistInfo(artist));\n      menu.appendChild(button);\n    });\n  }\n\n  // Function to display artist info and songs\n  function showArtistInfo(artist) {\n    artistNameElement.textContent = artist.name;\n    artistLinksElement.innerHTML = \"\";\n\n    const artistLinks = artist.urls\n      .map((link) => `<a href=\"${link.url}\" target=\"_blank\">${link.name}</a>`)\n      .join(\", \");\n    artistLinksElement.innerHTML = `(${artistLinks})`;\n\n    const filteredSongs = songs.filter(\n      (song) => song.artistId === artist.artistId && !song.explicit\n    );\n\n    // Clear the previous content\n    songTableBody.innerHTML = \"\";\n    songCardContainer.innerHTML = \"\";\n\n    filteredSongs.forEach((song) => {\n      // Create and append table row\n      const row = createSongTableRow(song);\n      songTableBody.appendChild(row);\n\n      // Create and append card\n      const card = createSongCard(song);\n      songCardContainer.appendChild(card);\n    });\n  }\n\n  // Function to create a table row for a song\n  function createSongTableRow(song) {\n    const row = document.createElement(\"tr\");\n\n    const titleCell = document.createElement(\"td\");\n    titleCell.innerHTML = `<a href=\"${song.url}\" target=\"_blank\">${song.title}</a>`;\n    row.appendChild(titleCell);\n\n    const yearCell = document.createElement(\"td\");\n    yearCell.textContent = song.year;\n    row.appendChild(yearCell);\n\n    const durationCell = document.createElement(\"td\");\n    durationCell.textContent = convertSecondsToMinutes(song.duration);\n    row.appendChild(durationCell);\n\n    return row;\n  }\n\n  // Function to create a card for a song\n  function createSongCard(song) {\n    const card = document.createElement(\"div\");\n    card.classList.add(\"card\");\n\n    const songImg = document.createElement(\"img\");\n    songImg.src = song.imageURL;\n    songImg.alt = `Image of ${song.title}`;\n    songImg.classList.add(\"card-image\");\n    songImg.addEventListener(\"click\", () => {\n      window.open(song.url, \"_blank\");\n    });\n    card.appendChild(songImg);\n\n    const songTitle = document.createElement(\"h3\");\n    songTitle.classList.add(\"card-title\");\n    songTitle.textContent = song.title;\n    card.appendChild(songTitle);\n\n    const songYear = document.createElement(\"time\");\n    songYear.classList.add(\"card-year\");\n    songYear.textContent = song.year;\n    card.appendChild(songYear);\n\n    const songDuration = document.createElement(\"span\");\n    songDuration.classList.add(\"card-duration\");\n    songDuration.textContent = convertSecondsToMinutes(song.duration);\n    card.appendChild(songDuration);\n\n    return card;\n  }\n\n  // Function to convert seconds to minutes and seconds\n  function convertSecondsToMinutes(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\n  }\n\n  // Event listener for the newsletter form submission\n  newsletterForm.addEventListener(\"submit\", function (event) {\n    event.preventDefault(); // Prevent the form from actually submitting\n\n    // Clear any existing messages\n    subscribeMessageContainer.innerHTML = \"\";\n\n    // Show the subscribed message\n    const subscribedMessage = document.createElement(\"p\");\n    subscribedMessage.textContent = \"You are subscribed!\";\n    subscribedMessage.style.color = \"#4caf50\"; // Success color\n    subscribeMessageContainer.appendChild(subscribedMessage);\n\n    // Clear the email input field\n    newsletterForm.querySelector('input[type=\"email\"]').value = \"\";\n  });\n\n  // Function to add a new link input field\n  function addLink(containerId) {\n    const container = document.getElementById(containerId);\n\n    // Create new input field\n    const newInput = document.createElement(\"input\");\n    newInput.type = \"url\";\n    newInput.name = \"url\";\n    newInput.placeholder = \"Enter URL\";\n    newInput.required = true;\n\n    // Create new remove button\n    const removeButton = document.createElement(\"button\");\n    removeButton.type = \"button\";\n    removeButton.textContent = \"Remove\";\n    removeButton.addEventListener(\"click\", () => {\n      container.removeChild(newInput);\n      container.removeChild(removeButton);\n    });\n\n    container.appendChild(newInput);\n    container.appendChild(removeButton);\n  }\n\n  // Initialize the artist request form (if exists)\n  function initializeArtistRequestForm() {\n    if (addMoreLinksButton) {\n      addMoreLinksButton.addEventListener(\"click\", () => addLink(\"artist-links-container\"));\n    }\n\n    if (submitArtistRequestButton) {\n      submitArtistRequestButton.addEventListener(\"click\", function (event) {\n        event.preventDefault(); // Prevent the form from actually submitting\n\n        // Optionally, handle form submission logic here\n\n        // Clear any existing messages\n        const messageContainer = document.getElementById(\"artist-request-message-container\");\n        messageContainer.innerHTML = \"\";\n\n        // Show the thank you message\n        const thankYouMessage = document.createElement(\"p\");\n        thankYouMessage.textContent = \"Thank you for your artist request!\";\n        thankYouMessage.style.color = \"#4caf50\"; // Success color\n        messageContainer.appendChild(thankYouMessage);\n\n        // Optionally, clear form fields here\n        artistRequestForm.reset();\n      });\n    }\n  }\n\n  // Initialize the artist buttons and form handling\n  createArtistButtons();\n  initializeArtistRequestForm();\n});\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}